#!/bin/bash

usage() {
	bin=$(basename $0)
	echo >&2 "Usage: $bin [--nomap]"
	echo >&2 "--nomap disables xmodmap/setxkbmap, which can be slow."
	exit ${1:-0}
}
[[ "$#" -gt 1 || "$1" = -h || "$1" = --help ]] && usage
[[ -z "$1" || "$1" = --nomap ]] || usage

set -o pipefail
err=0

[[ "$1" = --nomap ]] || {
	node=$(uname -n)
	if [[ "$node" = sacrilege ]]
	then
		# There's some weird interaction between "setxkbmap -model ..." and xmodmap
		xmodmap ~/.xmodmaprc || err=1
		setxkbmap -model acer_laptop -rules evdev\
			-layout 'us,ru' -option 'grp:switch,grp:caps_toggle,grp_led:caps' || err=1
		# Running all "keycode ..." rules somehow breaks "-model acer_laptop" keys, idk
		xmodmap -e 'keycode 108 = Alt_L'
	else
		setxkbmap -rules evdev\
			-layout 'us,ru' -option 'grp:switch,grp:caps_toggle,grp_led:caps' || err=1
		xmodmap ~/.xmodmaprc || err=1
		# Remap "menu" key to Super, to have one on the right with mech keyboard
		xmodmap -e 'keycode 135 = Super_R'
	fi
}
xset r rate 250 40 || err=1

# Not sure which it's supposed to apply to, gotta check
dev='PS/2 Logitech Wheel Mouse'
xinput list "$dev" &>/dev/null && {
	xinput set-prop "$dev" --type=float 257 9999999 || err=1
	xinput set-prop "$dev" --type=float 256 50 || err=1
} ||:

# Mouse - unmap any extra buttons
evdev=
for dev in $( xinput list |
	gawk 'match($0,/\<COMPANY\s+USB\s+Device\s+id=([0-9]+)\s+\[slave\s+pointer\>/,a) {print a[1]}' )
do
	evdev=$(xinput list-props "$dev" | gawk 'match($0,/^\s+Device Node \S+:\s+"(\S+)"$/,a) {print a[1]}')
	[[ -n "$evdev" ]] && udevadm info -q path -n "$evdev" | # match usb vid:pid from sysfs path
		grep -Piq '/[\da-z]+:09DA:1EC0\.[\da-z]+/' || { evdev=; continue; }
	xinput set-button-map "$dev" 1 2 3 4 5 0 0 0 0 0 0 0 || err=1
	break
done

# Synaptics settings, in case something (e.g. WM) messes these up
synclient -l &>/dev/null && {
	gawk 'match($2,/"/) && NF==3 && $1=="Option" {gsub(/"/,"",$2); gsub(/"/,"",$3); print $2 "=" $3}'\
		/usr/share/X11/xorg.conf.d/*-synaptics.conf | xargs synclient || err=1
}

exit "$err"
